services:
  frontend:
      build:
        context: ../Frontend-app
        dockerfile: Dockerfile
      image: frontend-img:v1
      container_name: frontend
      ports:
        - '80:80'
      depends_on:
        backend:
          condition: service_healthy
      networks:
        - app-network

  backend:
      build:
        context: .
        dockerfile: Dockerfile
      image: backend-img:v1
      container_name: backend
      ports: 
        - '8080'
      networks:
        - app-network

      environment:
        SPRING_DATASOURCE_URL: jdbc:mysql://database:3306/mydatabase
        SPRING_DATASOURCE_USERNAME: user
        SPRING_DATASOURCE_PASSWORD: root
      healthcheck:
        test: ["CMD","wget","--spider","-S","http://backend:8080/health"]
        start_period: 10s
        interval: 5s
        retries: 10
      depends_on:
        database:
          condition: service_healthy

  database:
      image: mysql:latest
      container_name: database
      environment:
        MYSQL_DATABASE: mydatabase
        MYSQL_PASSWORD: root
        MYSQL_ROOT_PASSWORD: root
        MYSQL_USER: user
      ports:
        - '3306'
      volumes:
        - mysql_data:/var/lib/mysql
      healthcheck:
        test: "mysql -uuser -proot -e 'select 1;' "
        start_period: 30s
        interval: 5s
        retries: 20
      networks:
        - app-network

networks:
    app-network:
      name: app-network
      driver: bridge

volumes:
    mysql_data:
    
